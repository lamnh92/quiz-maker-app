{"version":3,"file":"static/js/619.1091a641.chunk.js","mappings":"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","sources":["pages/QuizResult.js"],"sourcesContent":["import { useMemo } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nexport default function QuizResult() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const questions = location?.state?.data;\n  const chosse = location?.state?.chosse;\n\n  const getColorOfAnswer = (answer, question) => {\n    const correctAnswer = questions?.find(\n      (i) => i?.question === question?.question\n    )?.correct_answer;\n\n    const choosedAnswer = chosse?.find(\n      (i) => i?.question === question?.question\n    )?.answer;\n\n    let style = \"\";\n    switch (answer) {\n      case correctAnswer:\n        style = \"btn btn-success\";\n        break;\n      case choosedAnswer:\n        style = \"btn btn-danger\";\n        break;\n      default:\n        style = \"btn btn-outline-success\";\n        break;\n    }\n    return style;\n  };\n\n  const questionCount = useMemo(() => questions?.length, []);\n\n  const rightAnswerCount = useMemo(() => {\n    let cnt = 0;\n    for (const chossedAnswer of chosse) {\n      if (\n        questions?.find((item) => item?.question === chossedAnswer?.question)\n          ?.correct_answer === chossedAnswer?.answer\n      ) {\n        cnt++;\n      }\n    }\n\n    return cnt;\n  }, []);\n\n  const colorOfScore = useMemo(() => {\n    let color = \"\";\n    switch (rightAnswerCount) {\n      case 0:\n      case 1:\n        color = \"bg-danger\";\n        break;\n      case 2:\n      case 3:\n        color = \"bg-warning\";\n        break;\n      case 4:\n      case 5:\n        color = \"bg-success\";\n        break;\n      default:\n        break;\n    }\n    return color;\n  }, []);\n\n  return (\n    <>\n      <p className=\"h1 text-center\">RESULTS</p>\n\n      {questions?.map((item, row) => (\n        <div className=\"row justify-content-md-center\" key={row}>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col col-lg-10\">\n              <p dangerouslySetInnerHTML={{ __html: item?.question }}></p>\n            </div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\" col col-lg-10\">\n              <div className=\"d-flex flex-row\">\n                {item?.answers.map((answer, index) => (\n                  <div className=\"p-2\" key={index}>\n                    <button\n                      type=\"button\"\n                      className={getColorOfAnswer(answer, item)}\n                    >\n                      <span dangerouslySetInnerHTML={{ __html: answer }} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div className=\"row justify-content-md-center m-2\">\n        <div className=\"col col-lg-10\">\n          <p className={`text-center ${colorOfScore}`}>\n            You scored {rightAnswerCount} out of {questionCount}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"row justify-content-md-center m-2\">\n        <div className=\" col col-lg-2\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={() => navigate(\"/\")}\n          >\n            Create a new quiz\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["QuizResult","_location$state","_location$state2","navigate","useNavigate","location","useLocation","questions","state","data","chosse","getColorOfAnswer","answer","question","_questions$find","_chosse$find","correctAnswer","find","i","correct_answer","choosedAnswer","style","questionCount","useMemo","length","rightAnswerCount","cnt","chossedAnswer","_questions$find2","item","colorOfScore","color","_jsxs","_Fragment","children","_jsx","className","map","row","dangerouslySetInnerHTML","__html","answers","index","type","concat","onClick"],"sourceRoot":""}