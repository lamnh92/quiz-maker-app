{"version":3,"file":"static/js/644.2fd03ce6.chunk.js","mappings":"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","sources":["api/core/BaseApi.js","api/CategoryApi.js","api/QuestionApi.js","pages/QuizMaker.js"],"sourcesContent":["import axios from \"axios\";\n\n\nconst axiosClient = axios.create({\n  baseURL: \"https://opentdb.com\",\n});\n\naxiosClient.interceptors.response.use(\n  (response) => {\n    if (response !== undefined && response.data !== undefined) {\n      return response.data;\n    }\n\n    return response;\n  },\n  async (error) => {\n    throw error;\n  }\n);\n\nexport default axiosClient;\n","import Api from \"./core/BaseApi\";\n\nclass CategoryApi {\n  getAllCategories = () => {\n    return Api.get(\"/api_category.php\");\n  };\n}\n\nconst categoryApi = new CategoryApi();\nexport default categoryApi;\n","import Api from \"./core/BaseApi\";\n\nclass QuestionApi {\n  getAllQuestions = (categoryId, difficulty) => {\n    return Api.get(\n      `/api.php?amount=5&category=${categoryId}&difficulty=${difficulty}&type=multiple`\n    );\n  };\n}\n\nconst questionApi = new QuestionApi();\nexport default questionApi;\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport categoryApi from \"../api/CategoryApi\";\nimport questionApi from \"../api/QuestionApi\";\n\nexport default function QuizMaker() {\n  const navigate = useNavigate();\n\n  const [isBtn, setIsBtn] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [chossedAnswer, setChossedAnswer] = useState([]);\n  const initState = {\n    categorySelect: \"\",\n    difficultySelect: \"\",\n  };\n\n  const redirectToQuizResult = () => {\n    navigate(\"/results\", { state: { data: questions, chosse: chossedAnswer } });\n  };\n\n  const getCategories = async () => {\n    const data = await categoryApi.getAllCategories();\n    setCategories(data?.trivia_categories);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ defaultValues: initState });\n\n  const shuffleArray = (array) => {\n    for (let i = array?.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const setChosseAnswer = (answer, question) => {\n    const oldAnswer = chossedAnswer?.filter(\n      (item) => item?.question !== question?.question\n    );\n    if (oldAnswer?.length < chossedAnswer?.length) {\n      setChossedAnswer(oldAnswer);\n    } else {\n      setChossedAnswer([\n        ...chossedAnswer,\n        {\n          question: question?.question,\n          answer: answer,\n        },\n      ]);\n    }\n  };\n\n  const onSubmit = async (input) => {\n    const data = await questionApi.getAllQuestions(\n      input?.categorySelect,\n      input?.difficultySelect\n    );\n    let q = data?.results?.map((item) => ({\n      ...item,\n      answers: shuffleArray([item?.correct_answer, ...item?.incorrect_answers]),\n    }));\n    setQuestions(q);\n    setIsBtn(true);\n    setChossedAnswer([]);\n  };\n\n  const chosse = useMemo(() => chossedAnswer, [chossedAnswer]);\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <p className=\"h1 text-center\">QUIZ MAKER</p>\n        <div className=\"row justify-content-md-center m-2\">\n          <div className=\" col col-lg-2\">\n            <select\n              className=\"form-select\"\n              id=\"categorySelect\"\n              {...register(\"categorySelect\", {\n                required: { value: true, message: \"Please select category!\" },\n              })}\n            >\n              <option value=\"\">Select a category</option>\n              {categories?.map((item) => (\n                <option value={item?.id} key={item?.id}>\n                  {item?.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\" col col-lg-2\">\n            <select\n              className=\"form-select\"\n              id=\"difficultySelect\"\n              {...register(\"difficultySelect\", {\n                required: { value: true, message: \"Please select difficulty!\" },\n              })}\n            >\n              <option value=\"\">Select difficulty</option>\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </div>\n          <div className=\" col col-lg-2\">\n            <button\n              type=\"submit\"\n              id=\"createBtn\"\n              className=\"btn btn-primary\"\n              disabled={isBtn}\n            >\n              Create\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {questions?.map((item, row) => (\n        <div className=\"row justify-content-md-center\" key={row}>\n          <div className=\"row justify-content-md-center\">\n            <div className=\" col col-lg-10\">\n              <p dangerouslySetInnerHTML={{ __html: item?.question }}></p>\n            </div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\" col col-lg-10\">\n              <div className=\"d-flex flex-row\">\n                {item?.answers.map((answer, index) => (\n                  <div className=\"p-2\" key={index}>\n                    <button\n                      type=\"button\"\n                      className={\n                        chosse !== undefined &&\n                        chosse?.find((i) => i?.question === item?.question)\n                          ?.answer === answer\n                          ? \"btn btn-success\"\n                          : \"btn btn-outline-success\"\n                      }\n                      onClick={() => setChosseAnswer(answer, item)}\n                    >\n                      <span dangerouslySetInnerHTML={{ __html: answer }} />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      {chosse?.length === 5 && (\n        <div className=\"row justify-content-md-center m-2\">\n          <div className=\" col col-lg-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={redirectToQuizResult}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["axiosClient","axios","create","baseURL","interceptors","response","use","undefined","data","async","error","constructor","getAllCategories","Api","get","getAllQuestions","categoryId","difficulty","concat","QuizMaker","navigate","useNavigate","isBtn","setIsBtn","useState","categories","setCategories","questions","setQuestions","chossedAnswer","setChossedAnswer","register","handleSubmit","formState","errors","useForm","defaultValues","categorySelect","difficultySelect","shuffleArray","array","i","length","j","Math","floor","random","chosse","useMemo","useEffect","categoryApi","trivia_categories","getCategories","_jsxs","_Fragment","children","onSubmit","_data$results","questionApi","input","q","results","map","item","answers","correct_answer","incorrect_answers","_jsx","className","id","required","value","message","name","type","disabled","row","dangerouslySetInnerHTML","__html","question","answer","index","_chosse$find","find","onClick","setChosseAnswer","oldAnswer","filter","redirectToQuizResult","state"],"sourceRoot":""}